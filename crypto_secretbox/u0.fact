export
void u0(
    secret mut uint8[] x,
    secret uint8[] m,
    secret mut uint8[] c,
    public uint64 bytes) {

  secret mut uint8[64] partialblock = noinit(64);
  for (uint32 j = 0; j < bytes; j += 64) {
    public uint64 bytes_this_block = bytes - j > 64 ? 64 : bytes - j;

    secret mut uint32<4> diag0 = _load32_4_le(arrview(x,  0, 16));
    secret mut uint32<4> diag1 = _load32_4_le(arrview(x, 16, 16));
    secret mut uint32<4> diag2 = _load32_4_le(arrview(x, 32, 16));
    secret mut uint32<4> diag3 = _load32_4_le(arrview(x, 48, 16));

    secret mut uint32<4> a0 = diag1;

    for (uint32 i = 0; i < 20; i += 4) {
      a0    = a0 + diag0;
      secret mut uint32<4> a1    = diag0;
      secret mut uint32<4> b0    = a0;
      a0    = a0 << 7;
      b0    = b0 >> 25;
      diag3 = diag3 ^ a0;

      diag3 = diag3 ^ b0;

      a1    = a1 + diag3;
      secret mut uint32<4> a2    = diag3;
      secret mut uint32<4> b1    = a1;
      a1    = a1 << 9;
      b1    = b1 >> 23;
      diag2 = diag2 ^ a1;
      diag3 = diag3:<3, 0, 1, 2>;
      diag2 = diag2 ^ b1;

      a2    = a2 + diag2;
      secret mut uint32<4> a3    = diag2;
      secret mut uint32<4> b2    = a2;
      a2    = a2 << 13;
      b2    = b2 >> 19;
      diag1 = diag1 ^ a2;
      diag2 = diag2:<2, 3, 0, 1>;
      diag1 = diag1 ^ b2;

      a3    = a3 + diag1;
      secret mut uint32<4> a4    = diag3;
      secret mut uint32<4> b3    = a3;
      a3    = a3 << 18;
      b3    = b3 >> 14;
      diag0 = diag0 ^ a3;
      diag1 = diag1:<1, 2, 3, 0>;
      diag0 = diag0 ^ b3;

      a4    = a4 + diag0;
      secret mut uint32<4> a5    = diag0;
      secret mut uint32<4> b4    = a4;
      a4    = a4 << 7;
      b4    = b4 >> 25;
      diag1 = diag1 ^ a4;

      diag1 = diag1 ^ b4;

      a5    = a5 + diag1;
      secret mut uint32<4> a6    = diag1;
      secret mut uint32<4> b5    = a5;
      a5    = a5 << 9;
      b5    = b5 >> 23;
      diag2 = diag2 ^ a5;
      diag1 = diag1:<3, 0, 1, 2>;
      diag2 = diag2 ^ b5;

      a6    = a6 + diag2;
      secret mut uint32<4> a7    = diag2;
      secret mut uint32<4> b6    = a6;
      a6    = a6 << 13;
      b6    = b6 >> 19;
      diag3 = diag3 ^ a6;
      diag2 = diag2:<2, 3, 0, 1>;
      diag3 = diag3 ^ b6;

      a7    = a7 + diag3;
      a0    = diag1;
      secret mut uint32<4> b7    = a7;
      a7    = a7 << 18;
      b7    = b7 >> 14;
      diag0 = diag0 ^ a7;
      diag3 = diag3:<1, 2, 3, 0>;
      diag0 = diag0 ^ b7;

      a0    = a0 + diag0;
      a1    = diag0;
      b0    = a0;
      a0    = a0 << 7;
      b0    = b0 >> 25;
      diag3 = diag3 ^ a0;

      diag3 = diag3 ^ b0;

      a1    = a1 + diag3;
      a2    = diag3;
      b1    = a1;
      a1    = a1 << 9;
      b1    = b1 >> 23;
      diag2 = diag2 ^ a1;
      diag3 = diag3:<3, 0, 1, 2>;
      diag2 = diag2 ^ b1;

      a2    = a2 + diag2;
      a3    = diag2;
      b2    = a2;
      a2    = a2 << 13;
      b2    = b2 >> 19;
      diag1 = diag1 ^ a2;
      diag2 = diag2:<2, 3, 0, 1>;
      diag1 = diag1 ^ b2;

      a3    = a3 + diag1;
      a4    = diag3;
      b3    = a3;
      a3    = a3 << 18;
      b3    = b3 >> 14;
      diag0 = diag0 ^ a3;
      diag1 = diag1:<1, 2, 3, 0>;
      diag0 = diag0 ^ b3;

      a4    = a4 + diag0;
      a5    = diag0;
      b4    = a4;
      a4    = a4 << 7;
      b4    = b4 >> 25;
      diag1 = diag1 ^ a4;

      diag1 = diag1 ^ b4;

      a5    = a5 + diag1;
      a6    = diag1;
      b5    = a5;
      a5    = a5 << 9;
      b5    = b5 >> 23;
      diag2 = diag2 ^ a5;
      diag1 = diag1:<3, 0, 1, 2>;
      diag2 = diag2 ^ b5;

      a6    = a6 + diag2;
      a7    = diag2;
      b6    = a6;
      a6    = a6 << 13;
      b6    = b6 >> 19;
      diag3 = diag3 ^ a6;
      diag2 = diag2:<2, 3, 0, 1>;
      diag3 = diag3 ^ b6;

      a7    = a7 + diag3;
      a0    = diag1;
      b7    = a7;
      a7    = a7 << 18;
      b7    = b7 >> 14;
      diag0 = diag0 ^ a7;
      diag3 = diag3:<1, 2, 3, 0>;
      diag0 = diag0 ^ b7;
    }

    diag0 = diag0 + _load32_4_le(arrview(x,  0, 16));
    diag1 = diag1 + _load32_4_le(arrview(x, 16, 16));
    diag2 = diag2 + _load32_4_le(arrview(x, 32, 16));
    diag3 = diag3 + _load32_4_le(arrview(x, 48, 16));

    /*if (true) {
      secret uint32 inA = diag0:<0>;
      secret uint32 inB = diag1:<0>;
      secret uint32 inC = diag2:<0>;
      secret uint32 inD = diag3:<0>;
      diag0 = diag0:<1, 2, 3, 0>;
      diag1 = diag1:<1, 2, 3, 0>;
      diag2 = diag2:<1, 2, 3, 0>;
      diag3 = diag3:<1, 2, 3, 0>;
      _store32_le(ref arrview(partialblock,  A * 4, 4), inA);
      _store32_le(ref arrview(partialblock,  B * 4, 4), inB);
      _store32_le(ref arrview(partialblock,  C * 4, 4), inC);
      _store32_le(ref arrview(partialblock,  D * 4, 4), inD);
      }*/
    if (true) {
      secret uint32 inA = diag0:<0>;
      secret uint32 inB = diag1:<0>;
      secret uint32 inC = diag2:<0>;
      secret uint32 inD = diag3:<0>;
      diag0 = diag0:<1, 2, 3, 0>;
      diag1 = diag1:<1, 2, 3, 0>;
      diag2 = diag2:<1, 2, 3, 0>;
      diag3 = diag3:<1, 2, 3, 0>;
      _store32_le(ref arrview(partialblock,  0 * 4, 4), inA);
      _store32_le(ref arrview(partialblock, 12 * 4, 4), inB);
      _store32_le(ref arrview(partialblock,  8 * 4, 4), inC);
      _store32_le(ref arrview(partialblock,  4 * 4, 4), inD);
    }
    if (true) {
      secret uint32 inA = diag0:<0>;
      secret uint32 inB = diag1:<0>;
      secret uint32 inC = diag2:<0>;
      secret uint32 inD = diag3:<0>;
      diag0 = diag0:<1, 2, 3, 0>;
      diag1 = diag1:<1, 2, 3, 0>;
      diag2 = diag2:<1, 2, 3, 0>;
      diag3 = diag3:<1, 2, 3, 0>;
      _store32_le(ref arrview(partialblock,  5 * 4, 4), inA);
      _store32_le(ref arrview(partialblock,  1 * 4, 4), inB);
      _store32_le(ref arrview(partialblock, 13 * 4, 4), inC);
      _store32_le(ref arrview(partialblock,  9 * 4, 4), inD);
    }
    if (true) {
      secret uint32 inA = diag0:<0>;
      secret uint32 inB = diag1:<0>;
      secret uint32 inC = diag2:<0>;
      secret uint32 inD = diag3:<0>;
      diag0 = diag0:<1, 2, 3, 0>;
      diag1 = diag1:<1, 2, 3, 0>;
      diag2 = diag2:<1, 2, 3, 0>;
      diag3 = diag3:<1, 2, 3, 0>;
      _store32_le(ref arrview(partialblock, 10 * 4, 4), inA);
      _store32_le(ref arrview(partialblock,  6 * 4, 4), inB);
      _store32_le(ref arrview(partialblock,  2 * 4, 4), inC);
      _store32_le(ref arrview(partialblock, 14 * 4, 4), inD);
    }
    if (true) {
      secret uint32 inA = diag0:<0>;
      secret uint32 inB = diag1:<0>;
      secret uint32 inC = diag2:<0>;
      secret uint32 inD = diag3:<0>;
      diag0 = diag0:<1, 2, 3, 0>;
      diag1 = diag1:<1, 2, 3, 0>;
      diag2 = diag2:<1, 2, 3, 0>;
      diag3 = diag3:<1, 2, 3, 0>;
      _store32_le(ref arrview(partialblock, 15 * 4, 4), inA);
      _store32_le(ref arrview(partialblock, 11 * 4, 4), inB);
      _store32_le(ref arrview(partialblock,  7 * 4, 4), inC);
      _store32_le(ref arrview(partialblock,  3 * 4, 4), inD);
    }

    for (uint32 i = 0; i < bytes_this_block; i += 1) {
      c[j + i] = m[j + i] ^ partialblock[i];
    }

    if (bytes_this_block == 64) {
      secret mut uint32 in8 = _load32_le(arrview(x,  8 * 4, 4));
      secret mut uint32 in9 = _load32_le(arrview(x, 13 * 4, 4));
      in8 += 1;
      if (in8 == 0) {
        in9 += 1;
      }
      _store32_le(ref arrview(x,  8 * 4, 4), in8);
      _store32_le(ref arrview(x, 13 * 4, 4), in9);
    }
  }
  _memzero(ref partialblock);
}
