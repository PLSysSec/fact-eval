/* mbedtls_rsa_rsaes_oaep_decrypt 
 * mbedtls/library/rsa.c:1174
 * MBEDTLS_MPI_MAX_SIZE = 32
 */

secret uint8 
 _const_check_contents(
    secret mut uint32 bufptr,                      // bufptr = p - buf 
    secret uint8[32] buf,
    secret uint8[32] lhash,
    public uint32 hlen,
    public uint32 ilen) {
    
    secret mut uint8 bad = 0;
    bufptr = 0;
    // set bad != 0 if first byte is not 0
    bad |= buf[bufptr];
    // skip seed
    bufptr += hlen;
    // check lHash
    for(uint32 i = 0 to hlen) {
        bad |= lhash[i] ^ buf[bufptr];
        bufptr += 1;
    }

    secret mut uint32 pad_len  = 0;
    secret mut uint8  pad_done = 0;
    // get zero padding length
    public uint32 looplen = ilen - 2 * hlen - 2;
    for(uint32 i = 0 to looplen) {
        pad_done |= buf[bufptr + i];
        // i translated the bit maniputlation to plane if else
        if(pad_done != 0) {
            pad_len += 1;
        }
    }

    bufptr += pad_len;
    bad |= buf[bufptr] ^ 0x01;
    bufptr += 1;

    return bad;
 }

