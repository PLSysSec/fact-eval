public int8 sodium_pad (
    public mut uint32 padded_buflen_p,
    secret mut uint8[] buf,
    secret uint32 unpadded_buflen,
    public uint32 blocksize,
    public uint32 max_buflen ) {

    secret mut uint32 tail = 0;
    // public mut uint32 i = 0;
    secret mut uint32 xpadlen = 0;
    public mut uint32 xpadded_len = 0;
    secret mut uint8 mask = 0;
    secret mut uint8 barrier_mask = 0;
    public uint32 SIZE_MAX = 256;

    if (blocksize <= (uint32)0) {
        return (int8)-1;
    }

    xpadlen = blocksize - (uint32)1;

    if ((blocksize & (blocksize - (uint32)1)) == (uint32)0) {
        xpadlen -= unpadded_buflen & (blocksize - (uint32)1);
    } else {
        // xpadlen -= unpadded_buflen % blocksize; 
    }

    if (SIZE_MAX - unpadded_buflen <= xpadlen) {
        // sodium_misuse();
    }

    // here I'm doing addition on 2 secret values and assign the result to
    // a public variable. Will this raise safety issues?
    xpadded_len = unpadded_buflen + xpadlen;

    if (xpadded_len >= max_buflen) {
        return (int8)-1;
    }

    tail = xpadded_len;
    
    // the original code assigns the padded lenght back to
    // padded_buflen_p (return parameter)
    // the following line caused uncaught exception
    // padded_buflen_p = tail + (uint32)1;

    mask = (uint8)0;

    // what should 'i' be? secret or public?
    for (uint32 i = 0 to (uint32)blocksize) {
        if (i == xpadlen) {
            buf[i] = (uint8) 128;
        }
        if (i > xpadlen) {
            buf[i] = (uint8) 0;
        }
    }

    return (int8)0;
}
